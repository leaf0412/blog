(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{473:function(t,e,s){"use strict";s.r(e);var a=s(4),v=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"let-const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#let-const"}},[t._v("#")]),t._v(" let const")]),t._v(" "),s("ul",[s("li",[t._v("let 定义变量，const定义常量")]),t._v(" "),s("li",[t._v("不能重复定义")]),t._v(" "),s("li",[t._v("块级作用域\n"),s("ul",[s("li",[t._v("块级作用域{}包裹的，全局作用域，")])])]),t._v(" "),s("li",[t._v("不存在变量提升")])]),t._v(" "),s("h2",{attrs:{id:"箭头函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数"}},[t._v("#")]),t._v(" 箭头函数")]),t._v(" "),s("ul",[s("li",[t._v("参数 => 表达式 / 语句")]),t._v(" "),s("li",[t._v("继承外层作用域 this的指向 => 没有this指针")]),t._v(" "),s("li",[t._v("不能用作构造函数 new")]),t._v(" "),s("li",[t._v("没有prototype属性")])]),t._v(" "),s("h2",{attrs:{id:"promise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[t._v("#")]),t._v(" promise")]),t._v(" "),s("ul",[s("li",[t._v("resolve => 成功 reject => 拒绝 pending => 未决定")]),t._v(" "),s("li",[t._v("避免了回调地狱")]),t._v(" "),s("li",[t._v("异步处理错误的繁琐")]),t._v(" "),s("li",[t._v("异步返回执行的顺序不可控")])]),t._v(" "),s("h2",{attrs:{id:"模板字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板字符串"}},[t._v("#")]),t._v(" 模板字符串")]),t._v(" "),s("ul",[s("li",[t._v("表达式 "),s("code",[t._v("${}")])]),t._v(" "),s("li",[t._v("支持换行")])]),t._v(" "),s("h2",{attrs:{id:"class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class"}},[t._v("#")]),t._v(" class")]),t._v(" "),s("ul",[s("li",[t._v("extends 继承父类")]),t._v(" "),s("li",[t._v("想使用父类的构造函数，需要super")])]),t._v(" "),s("h2",{attrs:{id:"object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[t._v("#")]),t._v(" Object")]),t._v(" "),s("ul",[s("li",[t._v("对象属性简写")]),t._v(" "),s("li",[t._v("对象方法简写")]),t._v(" "),s("li",[t._v("属性名做为表达式")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('  let name = "tom"\n  let obj = {\n    name,\n    getName() {\n      return this.name\n    },\n    setName: (name) => {\n      this.name = name\n      return this.name\n    }\n  }\n')])])]),s("h2",{attrs:{id:"es6模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6模块化"}},[t._v("#")]),t._v(" es6模块化")]),t._v(" "),s("ul",[s("li",[t._v("export 导出")]),t._v(" "),s("li",[t._v("import 导入")])])])}),[],!1,null,null,null);e.default=v.exports}}]);