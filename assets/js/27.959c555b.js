(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{486:function(n,e,t){"use strict";t.r(e);var s=t(4),a=Object(s.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('\nmodule.exports = {\n\n  /* 部署应用包的基本URL */\n  /* baseUrl 从 Vue CLI 3.3 起已弃用 ，请使用publicPath */\n  //  baseUrl: process.env.NODE_ENV === "production" ? "./" : "./",\n  publicPath: process.env.NODE_ENV === "production" ? "./" : "./",\n\n  /* 生产环境构建文件的目录 defalut: dist */\n\n  outputDir: "dist",\n\n  /* 放置生成的静态文件目录（js css img） */\n\n  assetsDir: "static",\n\n  /* 指定生成的index.html 输出路径 相对 default: index.html */\n\n  indexPath: "index.html",\n\n  /* 指定生成文件名中包含hash default: true */\n\n  filenameHashing: true,\n\n  /* 多页模式下 */\n\n  /* pages: {\n\n    index: {\n\n      // page 的入口\n\n      entry: "src/index/main.js",\n\n      // 模板来源\n\n      template: "public/index.html",\n\n      // 在 dist/index.html 的输出\n\n      filename: "index.html",\n\n      // 当使用 title 选项时，\n\n      // template 中的 title 标签需要是 <title><%= htmlWebpackPlugin.options.title %></title>\n\n      // title: "Index Page",\n\n      // 在这个页面中包含的块，默认情况下会包含\n\n      // 提取出来的通用 chunk 和 vendor chunk。\n\n      chunks: ["chunk-vendors", "chunk-common", "index"]\n\n    },\n\n    // 当使用只有入口的字符串格式时，\n\n    // 模板会被推导为 `public/subpage.html`\n\n    // 并且如果找不到的话，就回退到 `public/index.html`。\n\n    // 输出文件名会被推导为 `subpage.html`。\n\n    // subpage: "src/subpage/main.js"\n\n  } */\n\n  /* 是否保存时 lint 代码 */\n\n  lintOnSave: process.env.NODE_ENV === "production",\n\n  /* 是否使用编译器 default: false */\n\n  runtimeCompiler: false,\n\n  /* 默认babel-loader会忽略node_modules中的文件，你想显示的话在这个选项中列出来 */\n\n  // transpileDependencies: [],\n\n  /* 生产环境的source map */\n\n  productionSourceMap: true,\n\n  // crossorigin: "",\n\n  integrity: false,\n  \n  configureWebpack: {\n     resolve: {\n      alias: {\n        \'assets\': \'@/assets\',\n        \'components\': \'@/components\',\n        \'views\': \'@/views\',\n      }\n    }\n  }\n\n  // css相关配置\n\n  css: {\n\n    // 是否使用css分离插件 ExtractTextPlugin\n\n    extract: true,\n\n    // 开启 CSS source maps?\n\n    sourceMap: false,\n\n    // css预设器配置项\n\n    loaderOptions: {},\n\n    // 启用 CSS modules for all css / pre-processor files.\n\n    modules: false\n\n  },\n\n  devServer: {\n\n    port: 8080,\n\n    host: "0.0.0.0",\n\n    https: false,\n\n    // 自动启动浏览器\n\n    open: false,\n\n    proxy: {\n      "/api": {\n          //代理路径 例如 https://baidu.com\n          target:  "https://baidu.com",\n          // 将主机标头的原点更改为目标URL\n          changeOrigin: true,\n          ws: true,\n          pathRewrite: {\n            "^/api": ""\n          }\n        }\n    }\n\n  }\n\n};\n\n')])])])])}),[],!1,null,null,null);e.default=a.exports}}]);