(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{472:function(n,t,a){"use strict";a.r(t);var e=a(4),s=Object(e.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h3",{attrs:{id:"一个常见的函数声明和变量的面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个常见的函数声明和变量的面试题"}},[n._v("#")]),n._v(" 一个常见的函数声明和变量的面试题")]),n._v(" "),a("p",[n._v("题目一：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("(function() {\n  fn();\n  var fn = function() {\n      alert(1)  \n  }\n  fn();\n  function fn() {\n    alert(2)\n  }\n})()\n")])])]),a("p",[n._v("题目二：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function test(age) {\n  console.log(age);\n  var age = 27;\n  console.log(age);\n  var age = function()  {};\n  console.log(age)\n}\ntest(3);\n")])])]),a("p",[n._v("想回答出来上面的面试题来，先要理解js中函数声明提升、变量声明提升和形参的优先级。如果有知道这三者的关系的，就可以退出该文章了。")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("(function() {\n  fn();\n  var fn = function() {\n      alert(1)  \n  }\n  fn();\n  function fn() {\n    alert(2)\n  }\n})()\n\n// 上面的代码通过 js解析后就会变成\n(function() {\n  function fn() {\n    alert(2)\n  }\n  var fn;\n  fn();\n  fn = function() {\n      alert(1)  \n  }\n  fn();\n})() \n// 所以运行的结果是  2  1\n")])])]),a("blockquote",[a("p",[n._v("事实上，js 的解析是分为两个阶段的，预编译和执行期")])]),n._v(" "),a("ul",[a("li",[n._v("预编译期间：对本代码块中的所有 声明变量 和 函数 进行处理(类似于 C语言的编译) ，但需要注意，\n1.此时处理函数的只是 声明式函数\n2.变量也只是进行了声明但是没有进行初始化和赋值")]),n._v(" "),a("li",[n._v("执行期间：从上到下编译执行代码块")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("f();  // 我是函数声明\nfunction f() {\n  console.log('我是函数声明');\n}\nvar f = function() {\n  console.log('我是变量赋值型函数');\n}\n")])])]),a("p",[n._v("从上面的代码中，就可以不难看出")]),n._v(" "),a("h3",{attrs:{id:"函数声明的优先级-高于-变量声明的优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数声明的优先级-高于-变量声明的优先级"}},[n._v("#")]),n._v(" 函数声明的优先级 高于 变量声明的优先级")])])}),[],!1,null,null,null);t.default=s.exports}}]);